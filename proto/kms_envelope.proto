// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
////////////////////////////////////////////////////////////////////////////////

syntax = "proto3";

package google.cloud.crypto.tink;

import "google/protobuf/any.proto";
import "proto/tink.proto";

option java_package = "com.google.cloud.crypto.tink";
option java_outer_classname = "KmsEnvelopeProto";

message KmsEnvelopeAeadParams {
  // This field specifies which KMS to call and how, e.g., GoogleCloudKmsAeadKey.
  // Required.
  google.protobuf.Any kms_key = 1;
  // Key format of the Data Encryption Key, e.g., AesCtrHmacAeadKeyFormat.
  // Required.
  KeyFormat dek_format = 2;
}

message KmsEnvelopeAeadKeyFormat {
  KmsEnvelopeAeadParams params = 1;
}

// There is no actual key material in the key.
message KmsEnvelopeAeadKey {
  int32 version = 1;
  KmsEnvelopeAeadParams params = 2;
}

// Envelope encryption produces a payload that is a serialization of this protobuf.
message KmsEnvelopePayload {
  // The encrypted DEK is the result of encrypting the DEK under the KMS key.
  bytes encrypted_dek = 1;
  // The encryption of plaintext under the DEK.
  bytes ciphertext = 2;
}
