// Definitions for Elliptic Curve Digital Signature Algorithm (ECDSA).
syntax = "proto3";

package cloud.crypto.tink;
import "proto/common.proto";

option java_package = "com.google.cloud.crypto.tink";

// Protos for Ecdsa.
message EcdsaParams {
  // Required.
  HashType hash_type = 1;
  // Required.
  EllipticCurve curve = 2;
}

// key_type: type.googleapis.com/google.cloud.crypto.tink.EcdsaPublicKey
message EcdsaPublicKey {
  // Required.
  uint32 version = 1;
  // Required.
  EcdsaParams params = 2;
  // Affine coordinates of the public key in bigendian representation. The
  // public key is a point (x, y) on the curve defined by params.curve. For
  // ECDH, it is crucial to verify whether the public key point (x, y) is on the
  // private's key curve. For ECDSA, such verification is a defense in depth.
  // Required.
  bytes x = 3;
  // Required.
  bytes y = 4;
}

// key_type: type.googleapis.com/google.cloud.crypto.tink.EcdsaPrivateKey
message EcdsaPrivateKey {
  // Required.
  uint32 version = 1;
  // Required.
  EcdsaPublicKey public_key = 2;
  // Unsigned big integer in bigendian representation.
  // Required.
  bytes key_value = 3;
}

message EcdsaKeyFormat {
  // Requied.
  uint32 key_version = 1;
  // Required.
  EcdsaParams params = 2;
}
